class Solution {

    void solve(vector<int>& candidates, vector<vector<int>>& ans, vector<int>& ds, int target, int i)
    {
        if(target==0)
        {
            ans.push_back(ds);
            return;
        }
        if(target<0)return;
  

        for(int j=i;j>=0;j--)
        {
            if(i!=j && candidates[j]==candidates[j+1])
                continue;
            ds.push_back(candidates[j]);
            solve(candidates, ans, ds, target-candidates[j], j-1);
            ds.pop_back();

        }
    }

public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int>ds;
        int n=candidates.size();

        sort(candidates.begin(),candidates.end());

        solve(candidates, ans, ds, target, n-1);

        return ans;

    }
};